{"version":3,"sources":["redux/phonebook-actions.js","components/phonebook/PhonebookForm.jsx","components/phonebook/PhonebookList.jsx","components/phonebook/Filter.jsx","redux/phonebook-reducer.js","redux/store.js","App.js","index.js"],"names":["addContact","createAction","deleteContact","changeFilter","PhonebookForm","state","id","uuidv4","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","handleCheckUniqueContact","props","onSubmit","reset","check","contacts","find","contact","alert","className","this","type","pattern","title","required","onChange","Component","connect","phonebook","dispatch","phonebookAction","getVisibleContacts","allContacts","filter","normalizedContactNames","toString","toLowerCase","includes","onRemove","phonebookActions","map","onClick","e","target","createReducer","actions","payload","changeFilterç","combineReducers","store","configureStore","reducer","phonebookReducer","devTools","process","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed309ade.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\n\nconst addContact = createAction('phonebook/add')\n\nconst deleteContact = createAction('phonebook/delete')\n\nconst changeFilter = createAction('phonebook/changeFilter')\n\nexport default { addContact, deleteContact, changeFilter };\n","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport phonebookAction from \"../../redux/phonebook-actions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass PhonebookForm extends Component {\n  state = {\n    id: uuidv4(),\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.handleCheckUniqueContact(this.state.name)) {\n      this.reset();\n      return;\n    }\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  handleCheckUniqueContact = (name) => {\n    const check = this.props.contacts.find((contact) => {\n      return contact.name === name;\n    });\n    if (check) {\n      alert(\"Contact is already exist\");\n      return check;\n    }\n  };\n\n  reset = () => {\n    this.setState({ id: uuidv4(), name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className={\"form\"} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.phonebook.contacts\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (contact) => {\n    dispatch(phonebookAction.addContact(contact));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookForm);\n","import { connect } from \"react-redux\";\nimport phonebookActions from \"../../redux/phonebook-actions\";\n\nconst PhonebookList = ({ contacts, onRemove }) => {\n  return(\n    <ul>\n        {contacts.map((contact) => (\n      <li key={contact.id}>\n        <p>\n          📱 {contact.name}: {contact.number}\n        </p>\n        <button\n          onClick={() => {\n            onRemove(contact.id);\n          }}\n        >\n          Remove\n        </button>\n      </li>))}\n    </ul>\n  )\n\n\n}\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedContactNames = filter.toString().toLowerCase();\n  return allContacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedContactNames)\n  );\n};\n\nconst mapStateToProps = ({phonebook: {contacts, filter}}) => ({\n  contacts: getVisibleContacts(contacts, filter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onRemove: id => {dispatch(phonebookActions.deleteContact(id))}\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookList)\n\n","import { connect } from \"react-redux\";\nimport phonebookActions from \"../../redux/phonebook-actions\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={\"form\"}>\n    Find contacts by name\n    <input value={value} onChange={onChange} />\n  </label>\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(phonebookActions.changeFilter(e.target.value)),\n});\n\nexport default connect(null, mapDispatchToProps)(Filter);\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport  actions from './phonebook-actions'\n\nconst contacts = createReducer([], {\n  [actions.addContact]: (state, {payload}) => [...state, payload],\n  [actions.deleteContact]: (state, {payload}) => state.filter((contact) => contact.id !== payload)\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilterç]: (state, {payload}) => payload\n})\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport phonebookReducer from './phonebook-reducer'\n\nconst store = configureStore({\n    reducer: {\n        phonebook: phonebookReducer\n    },\n    devTools: process.env.NODE_ENV === 'development'\n})\n\nexport default store;\n  ","import { Component } from \"react\";\nimport PhonebookForm from \"./components/phonebook/PhonebookForm\";\nimport PhonebookList from \"./components/phonebook/PhonebookList\";\nimport Filter from \"./components/phonebook/Filter\";\nimport \"./styles.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nclass App extends Component {\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div className={\"app\"}>\n          <h1>Phonebook</h1>\n          <PhonebookForm />\n          <h2>Contacts</h2>\n          <Filter />\n          <PhonebookList />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}